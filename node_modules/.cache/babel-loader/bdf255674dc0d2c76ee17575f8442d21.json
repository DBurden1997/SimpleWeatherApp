{"ast":null,"code":"var _jsxFileName = \"/Users/dylanburden/Documents/repos/WeatherApp/weather-app/src/index.tsx\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet url = `http://api.openweathermap.org/data/2.5/forecast?id=${6324733}&units=metric&appid=f220b9aba6df3b08eb9326d6ee10a251`;\nconst xhr = new XMLHttpRequest();\nxhr.open('GET', url);\nxhr.send();\n\nxhr.onload = () => {\n  // we can change the data type to json also by\n  const data = JSON.parse(xhr.response);\n  console.log(data);\n  let weatherList = data.list;\n  let daily = weatherList.filter((listItem, index) => {\n    return index % 8 === 0;\n  });\n  console.log(daily);\n  let weatherData = daily.map(dayData => {\n    let mappedData = {\n      day: new Date(dayData.dt * 1000).toLocaleString('en-US', {\n        weekday: 'long'\n      }),\n      temp: dayData.main.temp,\n      weatherDesc: dayData.weather[0].main,\n      weatherIcon: dayData.weather[0].icon\n    };\n    return mappedData;\n  });\n  console.log(weatherData);\n};\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 74,\n  columnNumber: 3\n}, this)); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();","map":{"version":3,"names":["React","ReactDOM","App","reportWebVitals","url","xhr","XMLHttpRequest","open","send","onload","data","JSON","parse","response","console","log","weatherList","list","daily","filter","listItem","index","weatherData","map","dayData","mappedData","day","Date","dt","toLocaleString","weekday","temp","main","weatherDesc","weather","weatherIcon","icon","root","createRoot","document","getElementById","render"],"sources":["/Users/dylanburden/Documents/repos/WeatherApp/weather-app/src/index.tsx"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\ntype WeatherListItemMain = {\n  feels_like : number;\n  grnd_level : number;\n  humidity : number;\n  pressure : number;\n  sea_level : number;\n  temp : number;\n  temp_kf : number;\n  temp_max : number;\n  temp_min : number;\n}\n\ntype WeatherListItemWeather = {\n  description : string;\n  icon : string;\n  id : number;\n  main : string;\n}\n\ntype WeatherListItem = {\n  dt : number;\n  main : WeatherListItemMain;\n  weather : Array<WeatherListItemWeather>;\n}\n\ntype WeatherData = {\n  day: string;\n  temp : number;\n  weatherDesc : string;\n  weatherIcon : string;\n}\n\nlet url = `http://api.openweathermap.org/data/2.5/forecast?id=${6324733}&units=metric&appid=f220b9aba6df3b08eb9326d6ee10a251`\n\nconst xhr = new XMLHttpRequest();\nxhr.open('GET',url);\nxhr.send();\nxhr.onload = () =>{\n    // we can change the data type to json also by\n    const data = JSON.parse(xhr.response);\n    console.log(data);\n\n    let weatherList : Array<WeatherListItem> = data.list;\n    let daily : Array<WeatherListItem>= weatherList.filter((listItem, index) => {\n      return index % 8 === 0;\n    });\n    console.log(daily);\n\n    let weatherData : Array<WeatherData> = daily.map((dayData) : WeatherData => {\n      let mappedData : WeatherData = {\n        day: new Date(dayData.dt * 1000).toLocaleString('en-US', {weekday: 'long'}),\n        temp: dayData.main.temp,\n        weatherDesc: dayData.weather[0].main,\n        weatherIcon: dayData.weather[0].icon,\n      };\n\n      return mappedData\n    });\n\n    console.log(weatherData);\n};\n\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;AAkCA,IAAIC,GAAG,GAAI,sDAAqD,OAAQ,sDAAxE;AAEA,MAAMC,GAAG,GAAG,IAAIC,cAAJ,EAAZ;AACAD,GAAG,CAACE,IAAJ,CAAS,KAAT,EAAeH,GAAf;AACAC,GAAG,CAACG,IAAJ;;AACAH,GAAG,CAACI,MAAJ,GAAa,MAAK;EACd;EACA,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWP,GAAG,CAACQ,QAAf,CAAb;EACAC,OAAO,CAACC,GAAR,CAAYL,IAAZ;EAEA,IAAIM,WAAoC,GAAGN,IAAI,CAACO,IAAhD;EACA,IAAIC,KAA8B,GAAEF,WAAW,CAACG,MAAZ,CAAmB,CAACC,QAAD,EAAWC,KAAX,KAAqB;IAC1E,OAAOA,KAAK,GAAG,CAAR,KAAc,CAArB;EACD,CAFmC,CAApC;EAGAP,OAAO,CAACC,GAAR,CAAYG,KAAZ;EAEA,IAAII,WAAgC,GAAGJ,KAAK,CAACK,GAAN,CAAWC,OAAD,IAA2B;IAC1E,IAAIC,UAAwB,GAAG;MAC7BC,GAAG,EAAE,IAAIC,IAAJ,CAASH,OAAO,CAACI,EAAR,GAAa,IAAtB,EAA4BC,cAA5B,CAA2C,OAA3C,EAAoD;QAACC,OAAO,EAAE;MAAV,CAApD,CADwB;MAE7BC,IAAI,EAAEP,OAAO,CAACQ,IAAR,CAAaD,IAFU;MAG7BE,WAAW,EAAET,OAAO,CAACU,OAAR,CAAgB,CAAhB,EAAmBF,IAHH;MAI7BG,WAAW,EAAEX,OAAO,CAACU,OAAR,CAAgB,CAAhB,EAAmBE;IAJH,CAA/B;IAOA,OAAOX,UAAP;EACD,CATsC,CAAvC;EAWAX,OAAO,CAACC,GAAR,CAAYO,WAAZ;AACH,CAvBD;;AA0BA,MAAMe,IAAI,GAAGpC,QAAQ,CAACqC,UAAT,CACXC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CADW,CAAb;AAGAH,IAAI,CAACI,MAAL,eACE,QAAC,KAAD,CAAO,UAAP;EAAA,uBACE,QAAC,GAAD;IAAA;IAAA;IAAA;EAAA;AADF;EAAA;EAAA;EAAA;AAAA,QADF,E,CAMA;AACA;AACA;;AACAtC,eAAe"},"metadata":{},"sourceType":"module"}