{"ast":null,"code":"var _jsxFileName = \"/Users/dylanburden/Documents/repos/WeatherApp/weather-app/src/App.tsx\";\nimport React from 'react';\nimport CityNav from './CityNav';\nimport WeatherPanel from './WeatherPanel';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cityList: [\"St. John's\", \"Tokyo\", \"Madrid\"],\n      cityWeatherIds: new Map([[\"St. John's\", 6324733], [\"Tokyo\", 1850147], [\"Madrid\", 6359304]]),\n      cityWeatherData: new Map([]),\n      activeCity: \"St. John's\"\n    };\n  }\n\n  getWeatherData(cityId) {\n    console.log(cityId);\n    return new Promise((resolve, reject) => {\n      let url = `http://api.openweathermap.org/data/2.5/forecast?id=${cityId}&units=metric&appid=f220b9aba6df3b08eb9326d6ee10a251`;\n      const xhr = new XMLHttpRequest();\n      xhr.open('GET', url);\n\n      xhr.onload = () => {\n        if (xhr.status >= 200 && xhr.status < 300) {\n          resolve(xhr.response);\n        } else {\n          reject(xhr.statusText);\n        }\n      };\n\n      xhr.onerror = () => reject(xhr.statusText);\n\n      xhr.send();\n    });\n  }\n\n  parseWeatherData(data) {\n    const parsedData = JSON.parse(data);\n    let weatherList = parsedData.list;\n    let daily = weatherList.filter((listItem, index) => {\n      return index % 8 === 0;\n    });\n    console.log(daily);\n    let weatherData = daily.map(dayData => {\n      let mappedData = {\n        day: new Date(dayData.dt * 1000).toLocaleString('en-US', {\n          weekday: 'long'\n        }),\n        temp: dayData.main.temp,\n        weatherDesc: dayData.weather[0].main,\n        weatherIcon: dayData.weather[0].icon\n      };\n      return mappedData;\n    });\n    return weatherData;\n  }\n\n  changeCity(activeCity) {\n    this.setState(state => ({\n      activeCity\n    }));\n  }\n\n  componentDidMount() {\n    console.log(\"mounted\");\n    let stJohnsId = this.state.cityWeatherIds.get(\"St. John's\");\n    let tokyoId = this.state.cityWeatherIds.get(\"Tokyo\");\n    let madridId = this.state.cityWeatherIds.get(\"Madrid\");\n\n    if (stJohnsId && tokyoId && madridId) {\n      let stJohnsPromise = this.getWeatherData(stJohnsId).then(this.parseWeatherData, error => console.log(error));\n      let tokyoPromise = this.getWeatherData(tokyoId).then(this.parseWeatherData, error => console.log(error));\n      let madridPromise = this.getWeatherData(madridId).then(this.parseWeatherData, error => console.log(error));\n      Promise.all([stJohnsPromise, tokyoPromise, madridPromise]).then(weatherData => {\n        let cityWeatherData = new Map();\n\n        if (weatherData[0]) {\n          cityWeatherData.set(\"St. John's\", weatherData[0]);\n        }\n\n        if (weatherData[1]) {\n          cityWeatherData.set(\"Tokyo\", weatherData[1]);\n        }\n\n        if (weatherData[2]) {\n          cityWeatherData.set(\"Madrid\", weatherData[2]);\n        }\n\n        console.log(cityWeatherData);\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: /*#__PURE__*/_jsxDEV(CityNav, {\n          cityList: this.state.cityList,\n          activeCity: this.state.activeCity,\n          onCityClick: this.changeCity.bind(this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"App-content\",\n        children: /*#__PURE__*/_jsxDEV(WeatherPanel, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n        className: \"App-footer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"names":["React","CityNav","WeatherPanel","App","Component","constructor","props","state","cityList","cityWeatherIds","Map","cityWeatherData","activeCity","getWeatherData","cityId","console","log","Promise","resolve","reject","url","xhr","XMLHttpRequest","open","onload","status","response","statusText","onerror","send","parseWeatherData","data","parsedData","JSON","parse","weatherList","list","daily","filter","listItem","index","weatherData","map","dayData","mappedData","day","Date","dt","toLocaleString","weekday","temp","main","weatherDesc","weather","weatherIcon","icon","changeCity","setState","componentDidMount","stJohnsId","get","tokyoId","madridId","stJohnsPromise","then","error","tokyoPromise","madridPromise","all","set","render","bind"],"sources":["/Users/dylanburden/Documents/repos/WeatherApp/weather-app/src/App.tsx"],"sourcesContent":["import React from 'react';\nimport CityNav from './CityNav';\nimport WeatherPanel from './WeatherPanel';\nimport './App.css';\nimport {WeatherData, WeatherListItem} from './weatherData';\n\ntype Props = {\n\n};\n\ntype State = {\n  cityList : Array<string>;\n  cityWeatherIds : Map<string, number>;\n  cityWeatherData: Map<string, Array<WeatherData>>,\n  activeCity : string;\n};\n\nclass App extends React.Component<Props, State>{\n  constructor(props : Props) {\n    super(props);\n\n    this.state = {\n      cityList: [\"St. John's\", \"Tokyo\", \"Madrid\"],\n      cityWeatherIds: new Map<string, number>([\n        [\"St. John's\", 6324733],\n        [\"Tokyo\", 1850147],\n        [\"Madrid\", 6359304],\n      ]),\n      cityWeatherData: new Map<string, Array<WeatherData>>([]),\n      activeCity: \"St. John's\",\n    };\n  }\n\n  getWeatherData(cityId : number) {\n    console.log(cityId);\n    return new Promise((resolve, reject) => {\n      let url = `http://api.openweathermap.org/data/2.5/forecast?id=${cityId}&units=metric&appid=f220b9aba6df3b08eb9326d6ee10a251`\n  \n      const xhr = new XMLHttpRequest();\n      xhr.open('GET',url);\n      xhr.onload = () => {\n        if(xhr.status >= 200 && xhr.status < 300) {\n          resolve(xhr.response);\n        } else {\n          reject(xhr.statusText);\n        }\n      };\n      xhr.onerror = () => reject(xhr.statusText);\n      xhr.send();\n    })\n  }\n  \n  parseWeatherData(data : any) {\n    const parsedData = JSON.parse(data);\n\n    let weatherList : Array<WeatherListItem> = parsedData.list;\n    let daily : Array<WeatherListItem> = weatherList.filter((listItem, index) => {\n      return index % 8 === 0;\n    });\n    console.log(daily);\n\n    let weatherData : Array<WeatherData> = daily.map((dayData) : WeatherData => {\n      let mappedData : WeatherData = {\n        day: new Date(dayData.dt * 1000).toLocaleString('en-US', {weekday: 'long'}),\n        temp: dayData.main.temp,\n        weatherDesc: dayData.weather[0].main,\n        weatherIcon: dayData.weather[0].icon,\n      };\n\n      return mappedData;\n    });\n  \n    return weatherData;\n  }\n\n  changeCity(activeCity : string) {\n      this.setState((state) => ({\n          activeCity\n      }));\n  }\n\n  componentDidMount() {\n    console.log(\"mounted\")\n    let stJohnsId = this.state.cityWeatherIds.get(\"St. John's\");\n    let tokyoId = this.state.cityWeatherIds.get(\"Tokyo\");\n    let madridId = this.state.cityWeatherIds.get(\"Madrid\");\n    if(stJohnsId && tokyoId && madridId) {\n      let stJohnsPromise = this.getWeatherData(stJohnsId).then(this.parseWeatherData, (error)=>console.log(error));\n      let tokyoPromise = this.getWeatherData(tokyoId).then(this.parseWeatherData, (error)=>console.log(error));\n      let madridPromise = this.getWeatherData(madridId).then(this.parseWeatherData, (error)=>console.log(error));\n\n      Promise.all([stJohnsPromise, tokyoPromise, madridPromise]).then((weatherData) => {\n        let cityWeatherData = new Map<string, Array<WeatherData>>();\n        if(weatherData[0]) {\n          cityWeatherData.set(\"St. John's\", weatherData[0]);\n        }\n        if(weatherData[1]) {\n          cityWeatherData.set(\"Tokyo\", weatherData[1]);\n        }\n        if(weatherData[2]) {\n          cityWeatherData.set(\"Madrid\", weatherData[2]);\n        }\n        console.log(cityWeatherData);\n      })\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <CityNav cityList={this.state.cityList} activeCity={this.state.activeCity} onCityClick={this.changeCity.bind(this)}></CityNav>\n        </header>\n        <main className=\"App-content\">\n          <WeatherPanel></WeatherPanel>\n        </main>\n        <footer className='App-footer'>\n  \n        </footer>\n      </div>\n    );\n  }\n  }\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}